%% Display result
function kholi_mod2()
    clc; clear;
    Temp();
    A = vectorA();
    B = vectorB();
    A_p = A(1:end,1:end);
    B_p = B(1:end,1);
    X = pinv(A_p)*B_p;
    MAD();
    [Rng_adj,Tmin] = Estimation_Data();
    


end

%% value of k
function k = kfunc()
    Jan = 1; Feb = 2; Mar = 3; Apr = 4; May = 5; Jun = 6; Jul = 7; Aug = 8; Sep = 9; Oct = 10; Nov = 11; Dec = 12;
    Yola = 1; Bauchi = 2; Maiduguri = 3; Kaduna = 4; Kano = 5; Ilorin = 6; Minna = 7; Jos = 8; Sokoto = 9;
    
    City = Bauchi;  
    Month = Jun; 
    
    k = Month + 12*(City-1);
    
end

%% k designation
function [City,Month] = Data_Tag()

    k = kfunc();
    
    if (k==1)
        City = "Yola";
        Month = "January";
    
    elseif (k==2)
        City = "Yola";
        Month = "February";

    elseif (k==3)
    City = "Yola";
    Month = "March";

    elseif (k==4)
    City = "Yola";
    Month = "April";

    elseif (k==5)
    City = "Yola";
    Month = "May";

    elseif (k==6)
    City = "Yola";
    Month = "June";

    elseif (k==7)
    City = "Yola";
    Month = "July";

    elseif (k==8)
    City = "Yola";
    Month = "August";

    elseif (k==9)
    City = "Yola";
    Month = "September";

    elseif (k==10)
    City = "Yola";
    Month = "October";

    elseif (k==11)
    City = "Yola";
    Month = "November";

    elseif (k==12)
    City = "Yola";
    Month = "December";
    
    elseif (k==13)
        City = "Bauchi";
        Month = "January";
    
    elseif (k==14)
        City = "Bauchi";
        Month = "February";

    elseif (k==15)
    City = "Bauchi";
    Month = "March";

    elseif (k==16)
    City = "Bauchi";
    Month = "April";

    elseif (k==17)
    City = "Bauchi";
    Month = "May";

    elseif (k==18)
    City = "Bauchi";
    Month = "June";

    elseif (k==19)
    City = "Bauchi";
    Month = "July";

    elseif (k==20)
    City = "Bauchi";
    Month = "August";

    elseif (k==21)
    City = "Bauchi";
    Month = "September";

    elseif (k==22)
    City = "Bauchi";
    Month = "October";

    elseif (k==23)
    City = "Bauchi";
    Month = "November";

    elseif (k==24)
    City = "Bauchi";
    Month = "December";
    
    elseif (k==25)
    City = "Maiduguri";
    Month = "January";
    
    elseif (k==26)
        City = "Maiduguri";
        Month = "February";

    elseif (k==27)
        City = "Maiduguri";
        Month = "March";

    elseif (k==28)
        City = "Maiduguri";
        Month = "April";

    elseif (k==29)
        City = "Maiduguri";
        Month = "May";

    elseif (k==30)
        City = "Maiduguri";
        Month = "June";

    elseif (k==31)
        City = "Maiduguri";
        Month = "July";

    elseif (k==32)
        City = "Maiduguri";
        Month = "August";

    elseif (k==33)
        City = "Maiduguri";
        Month = "September";

    elseif (k==34)
        City = "Maiduguri";
        Month = "October";

    elseif (k==35)
        City = "Maiduguri";
        Month = "November";

    elseif (k==36)
        City = "Maiduguri";
        Month = "December";
    
    elseif (k==37)
        City = "Kaduna";
        Month = "January";

    elseif (k==38)
        City = "Kaduna";
        Month = "February";

    elseif (k==39)
        City = "Kaduna";
        Month = "March";

    elseif (k==40)
        City = "Kaduna";
        Month = "April";

    elseif (k==41)
        City = "Kaduna";
        Month = "May";

    elseif (k==42)
        City = "Kaduna";
        Month = "June";

    elseif (k==43)
        City = "Kaduna";
        Month = "July";

    elseif (k==44)
        City = "Kaduna";
        Month = "August";

    elseif (k==45)
        City = "Kaduna";
        Month = "September";

    elseif (k==46)
        City = "Kaduna";
        Month = "October";

    elseif (k==47)
        City = "Kaduna";
        Month = "November";

    elseif (k==48)
        City = "Kaduna";
        Month = "December";
    
    elseif (k==49)
        City = "Kano";
        Month = "January";
    
    elseif (k==50)
        City = "Kano";
        Month = "February";

    elseif (k==51)
        City = "Kano";
        Month = "March";

    elseif (k==52)
        City = "Kano";
        Month = "April";

    elseif (k==53)
        City = "Kano";
        Month = "May";

    elseif (k==54)
        City = "Kano";
        Month = "June";

    elseif (k==55)
        City = "Kano";
        Month = "July";

    elseif (k==56)
        City = "Kano";
        Month = "August";

    elseif (k==57)
        City = "Kano";
        Month = "September";

    elseif (k==58)
        City = "Kano";
        Month = "October";

    elseif (k==59)
        City = "Kano";
        Month = "November";

    elseif (k==60)
        City = "Kano";
        Month = "December";
        
    elseif (k==61)
        City = "Ilorin";
        Month = "January";
    
    elseif (k==62)
        City = "Ilorin";
        Month = "February";

    elseif (k==63)
        City = "Ilorin";
        Month = "March";

    elseif (k==64)
        City = "Ilorin";
        Month = "April";

    elseif (k==65)
        City = "Ilorin";
        Month = "May";

    elseif (k==66)
        City = "Ilorin";
        Month = "June";

    elseif (k==67)
        City = "Ilorin";
        Month = "July";

    elseif (k==68)
        City = "Ilorin";
        Month = "August";

    elseif (k==69)
        City = "Ilorin";
        Month = "September";

    elseif (k==70)
        City = "Ilorin";
        Month = "October";

    elseif (k==71)
        City = "Ilorin";
        Month = "November";

    elseif (k==72)
        City = "Ilorin";
        Month = "December";
        
    elseif (k==73)
        City = "Minna";
        Month = "January";
    
    elseif (k==74)
        City = "Minna";
        Month = "February";

    elseif (k==75)
        City = "Minna";
        Month = "March";

    elseif (k==76)
        City = "Minna";
        Month = "April";

    elseif (k==77)
        City = "Minna";
        Month = "May";

    elseif (k==78)
        City = "Minna";
        Month = "June";

    elseif (k==79)
        City = "Minna";
        Month = "July";

    elseif (k==80)
        City = "Minna";
        Month = "August";

    elseif (k==81)
        City = "Minna";
        Month = "September";

    elseif (k==82)
        City = "Minna";
        Month = "October";

    elseif (k==83)
        City = "Minna";
        Month = "November";

    elseif (k==84)
        City = "Minna";
        Month = "December";
        
    elseif (k==85)
        City = "Jos";
        Month = "January";
    
    elseif (k==86)
        City = "Jos";
        Month = "February";

    elseif (k==87)
        City = "Jos";
        Month = "March";

    elseif (k==88)
        City = "Jos";
        Month = "April";

    elseif (k==89)
        City = "Jos";
        Month = "May";

    elseif (k==90)
        City = "Jos";
        Month = "June";

    elseif (k==91)
        City = "Jos";
        Month = "July";

    elseif (k==92)
        City = "Jos";
        Month = "August";

    elseif (k==93)
        City = "Jos";
        Month = "September";

    elseif (k==94)
        City = "Jos";
        Month = "October";

    elseif (k==95)
        City = "Jos";
        Month = "November";

    elseif (k==96)
        City = "Jos";
        Month = "December";
        
    elseif (k==97)
        City = "Sokoto";
        Month = "January";
    
    elseif (k==98)
        City = "Sokoto";
        Month = "February";

    elseif (k==99)
        City = "Sokoto";
        Month = "March";

    elseif (k==100)
        City = "Sokoto";
        Month = "April";

    elseif (k==101)
        City = "Sokoto";
        Month = "May";

    elseif (k==102)
        City = "Sokoto";
        Month = "June";

    elseif (k==103)
        City = "Sokoto";
        Month = "July";

    elseif (k==104)
        City = "Sokoto";
        Month = "August";

    elseif (k==105)
        City = "Sokoto";
        Month = "September";

    elseif (k==106)
        City = "Sokoto";
        Month = "October";

    elseif (k==107)
        City = "Sokoto";
        Month = "November";

    elseif (k==108)
        City = "Sokoto";
        Month = "December";
    end
end

%% Nothern Cities Average Hourly Dry Bulb Temperature Data
function [Temp_Data,Temp_data_raw] = Northern_Data()

    %******YOLA*******
    Jan_Yola = [41.43,42.32,43.08,44.13,45.47,46.31,45.46,42.23,37.08,31.36,26.42,22.86,20.48,18.87,18.15,18.87,21.38,25.3,29.56,33.09,35.52,37.2,38.69,40.17];
    Feb_Yola = [33.8,34.47,35.04,35.84,36.85,37.48,36.83,34.4,30.52,26.2,22.47,19.79,17.99,16.78,16.24,16.77,18.67,21.63,24.84,27.5,29.34,30.61,31.73,32.85];
    Mar_Yola = [35.36,36.08,36.7,37.56,38.65,39.33,38.64,36.01,31.81,27.13,23.1,20.2,18.25,16.94,16.36,16.94,18.99,22.19,25.66,28.54,30.53,31.9,33.12,34.33];
    Apr_Yola = [54.75,55.72,56.55,57.7,59.16,60.07,59.14,55.62,50.0,43.75,38.37,34.49,31.89,30.14,29.35,30.13,32.87,37.15,41.79,45.64,48.29,50.13,51.76,53.38];
    May_Yola = [72.72,73.8,74.72,76.0,77.62,78.64,77.6,73.7,67.45,60.49,54.5,50.19,47.29,45.35,44.48,45.34,48.39,53.15,58.31,62.6,65.54,67.59,69.4,71.2];
    Jun_Yola = [83.47,84.37,85.14,86.21,87.57,88.41,87.55,84.28,79.05,73.23,68.22,64.61,62.18,60.56,59.83,60.55,63.1,67.08,71.4,74.99,77.46,79.17,80.68,82.19];
    Jul_Yola = [87.4,88.24,88.95,89.94,91.2,91.99,91.19,88.15,83.3,77.9,73.25,69.9,67.65,66.14,65.47,66.14,68.5,72.2,76.21,79.53,81.82,83.41,84.82,86.21];
    Aug_Yola = [90.44,91.2,91.84,92.74,93.88,94.58,93.86,91.12,86.75,81.88,77.68,74.66,72.63,71.27,70.65,71.26,73.4,76.73,80.35,83.35,85.41,86.85,88.11,89.37];
    Sep_Yola = [90.22,91.06,91.77,92.76,94.02,94.81,94.01,90.97,86.12,80.72,76.07,72.72,70.47,68.96,68.29,68.96,71.32,75.02,79.03,82.35,84.64,86.23,87.64,89.03];
    Oct_Yola = [86.63,87.72,88.65,89.94,91.58,92.6,91.56,87.61,81.31,74.29,68.24,63.89,60.97,59.0,58.12,59.0,62.07,66.88,72.09,76.41,79.38,81.45,83.28,85.09];
    Nov_Yola = [68.14,69.75,71.12,73.03,75.46,76.97,75.43,69.59,60.25,49.86,40.91,34.47,30.14,27.23,25.93,27.22,31.78,38.89,46.6,53.0,57.41,60.46,63.17,65.85];
    Dec_Yola = [52.87,54.07,55.1,56.52,58.33,59.46,58.31,53.95,46.98,39.23,32.54,27.73,24.5,22.33,21.36,22.32,25.72,31.03,36.79,41.57,44.86,47.14,49.16,51.16];

    %******BAUCHI*******
    Jan_Bauchi = [40.52,41.27,41.91,42.8,43.93,44.63,43.91,41.2,36.85,32.02,27.86,24.86,22.85,21.49,20.89,21.49,23.61,26.91,30.5,33.48,35.53,36.95,38.21,39.46];
    Feb_Bauchi = [34.57,35.2,35.74,36.49,37.44,38.03,37.42,35.14,31.47,27.4,23.89,21.37,19.67,18.53,18.02,18.53,20.31,23.1,26.12,28.63,30.36,31.56,32.62,33.67];
    Mar_Bauchi = [30.75,31.31,31.8,32.46,33.31,33.84,33.3,31.26,27.99,24.35,21.21,18.96,17.44,16.43,15.97,16.42,18.02,20.51,23.21,25.45,26.99,28.06,29.01,29.95];
    Apr_Bauchi = [49.12,50.04,50.83,51.93,53.32,54.19,53.31,49.95,44.59,38.62,33.48,29.78,27.3,25.63,24.88,25.62,28.24,32.32,36.75,40.43,42.96,44.71,46.27,47.81];
    May_Bauchi = [66.1,67.14,68.03,69.26,70.82,71.79,70.8,67.04,61.02,54.34,48.57,44.42,41.63,39.76,38.92,39.75,42.69,47.27,52.24,56.36,59.19,61.16,62.9,64.63];
    Jun_Bauchi = [76.85,77.82,78.64,79.78,81.24,82.14,81.22,77.72,72.13,65.91,60.54,56.68,54.09,52.35,51.57,52.34,55.07,59.33,63.95,67.79,70.42,72.26,73.88,75.48];
    Jul_Bauchi = [82.36,83.13,83.79,84.7,85.86,86.59,85.85,83.05,78.58,73.61,69.32,66.23,64.16,62.77,62.14,62.76,64.94,68.35,72.04,75.11,77.22,78.68,79.98,81.26];
    Aug_Bauchi = [86.1,86.79,87.39,88.2,89.24,89.89,89.23,86.73,82.72,78.27,74.42,71.66,69.8,68.56,68.0,68.55,70.51,73.56,76.87,79.61,81.5,82.81,83.97,85.12];
    Sep_Bauchi = [83.47,84.28,84.97,85.92,87.14,87.9,87.12,84.2,79.52,74.32,69.83,66.6,64.44,62.98,62.33,62.97,65.26,68.82,72.68,75.89,78.1,79.63,80.98,82.33];
    Oct_Bauchi = [71.48,72.53,73.42,74.66,76.23,77.21,76.21,72.43,66.37,59.64,53.84,49.66,46.85,44.97,44.12,44.96,47.91,52.52,57.53,61.67,64.53,66.51,68.26,70.0];
    Nov_Bauchi = [47.78,48.69,49.46,50.54,51.91,52.76,51.89,48.6,43.33,37.48,32.43,28.8,26.36,24.72,23.98,24.71,27.28,31.29,35.64,39.25,41.73,43.45,44.98,46.49];
    Dec_Bauchi = [42.86,43.69,44.41,45.39,46.65,47.43,46.63,43.61,38.78,33.41,28.78,25.45,23.21,21.71,21.04,21.7,24.06,27.74,31.73,35.04,37.31,38.89,40.29,41.68];

    %********Maiduguri********
    Jan_Maiduguri = [38.2,39.24,40.14,41.37,42.95,43.93,42.93,39.14,33.09,26.36,20.56,16.38,13.58,11.69,10.85,11.69,14.64,19.25,24.25,28.39,31.25,33.23,34.98,36.72];
    Feb_Maiduguri =[30.83,31.68,32.42,33.44,34.73,35.54,34.71,31.6,26.62,21.08,16.3,12.86,10.56,9.01,8.31,9.0,11.43,15.22,19.34,22.75,25.1,26.73,28.18,29.61];
    Mar_Maiduguri =[25.0,25.69,26.29,27.11,28.15,28.8,28.14,25.62,21.6,17.13,13.27,10.5,8.63,7.38,6.82,7.38,9.34,12.4,15.72,18.48,20.38,21.69,22.86,24.02];
    Apr_Maiduguri =[33.37,34.15,34.82,35.74,36.92,37.65,36.91,34.08,29.55,24.51,20.17,17.05,14.95,13.54,12.91,13.53,15.74,19.19,22.93,26.03,28.17,29.65,30.96,32.26];
    May_Maiduguri =[50.32,51.4,52.32,53.6,55.23,56.25,55.21,51.29,45.03,38.06,32.05,27.73,24.82,22.87,22.0,22.86,25.92,30.69,35.87,40.16,43.12,45.17,46.99,48.79];
    Jun_Maiduguri =[66.42,67.5,68.41,69.68,71.3,72.3,71.28,67.39,61.17,54.26,48.3,44.01,41.13,39.19,38.33,39.18,42.22,46.95,52.09,56.35,59.28,61.32,63.12,64.9];
    Jul_Maiduguri =[79.19,80.14,80.96,82.1,83.54,84.44,83.52,80.05,74.5,68.32,63.0,59.17,56.6,54.87,54.09,54.86,57.57,61.8,66.38,70.19,72.81,74.63,76.23,77.83];
    Aug_Maiduguri =[87.38,88.23,88.95,89.95,91.23,92.02,91.21,88.15,83.24,77.79,73.09,69.71,67.44,65.91,65.23,65.91,68.3,72.03,76.08,79.44,81.75,83.36,84.78,86.18];
    Sep_Maiduguri =[84.78,85.84,86.74,87.99,89.58,90.58,89.56,85.73,79.61,72.8,66.93,62.7,59.86,57.96,57.1,57.95,60.94,65.6,70.66,74.86,77.74,79.75,81.53,83.28];
    Oct_Maiduguri =[68.65,70.03,71.21,72.84,74.92,76.22,74.9,69.89,61.88,52.97,45.29,39.77,36.05,33.56,32.44,33.55,37.46,43.56,50.17,55.66,59.44,62.06,64.39,66.69];
    Nov_Maiduguri =[44.41,45.57,46.56,47.93,49.68,50.77,49.66,45.45,38.73,31.25,24.81,20.17,17.05,14.96,14.02,14.95,18.23,23.35,28.9,33.51,36.68,38.88,40.83,42.76];
    Dec_Maiduguri =[42.14,43.3,44.29,45.67,47.42,48.52,47.4,43.18,36.44,28.93,22.46,17.81,14.68,12.58,11.64,12.57,15.86,21.0,26.58,31.2,34.38,36.59,38.55,40.48];

    %********Kaduna********
    Jan_Kaduna = [33.23,33.85,34.39,35.12,36.06,36.65,36.05,33.79,30.18,26.16,22.7,20.21,18.54,17.41,16.91,17.41,19.17,21.92,24.9,27.38,29.08,30.26,31.31,32.35];
    Feb_Kaduna = [29.53,30.07,30.52,31.16,31.96,32.46,31.95,30.01,26.91,23.46,20.49,18.35,16.91,15.95,15.51,15.94,17.46,19.82,22.38,24.51,25.97,26.98,27.88,28.77];
    Mar_Kaduna = [34.63,35.34,35.94,36.78,37.84,38.5,37.83,35.27,31.17,26.62,22.69,19.87,17.97,16.69,16.12,16.69,18.69,21.8,25.19,27.99,29.92,31.27,32.45,33.63];
    Apr_Kaduna = [60.42,61.49,62.4,63.67,65.28,66.28,65.26,61.38,55.18,48.29,42.34,38.06,35.19,33.26,32.39,33.25,36.28,41.0,46.12,50.37,53.29,55.32,57.12,58.9];
    May_Kaduna = [78.23,79.38,80.36,81.71,83.44,84.51,83.42,79.26,72.62,65.24,58.87,54.29,51.21,49.15,48.22,49.14,52.38,57.43,62.92,67.47,70.6,72.78,74.7,76.61];
    Jun_Kaduna = [85.12,86.12,86.97,88.16,89.67,90.61,89.65,86.02,80.21,73.75,68.19,64.18,61.49,59.68,58.87,59.68,62.51,66.93,71.73,75.71,78.44,80.35,82.03,83.7];
    Jul_Kaduna = [88.17,89.09,89.88,90.98,92.38,93.24,92.36,89.0,83.63,77.66,72.51,68.81,66.32,64.65,63.9,64.64,67.26,71.35,75.79,79.47,82.0,83.76,85.31,86.85];
    Aug_Kaduna = [89.96,90.81,91.53,92.53,93.8,94.59,93.78,90.72,85.83,80.38,75.69,72.32,70.05,68.52,67.84,68.52,70.91,74.63,78.68,82.03,84.34,85.94,87.36,88.77];
    Sep_Kaduna = [88.54,89.54,90.4,91.6,93.11,94.06,93.1,89.44,83.61,77.11,71.51,67.48,64.78,62.96,62.15,62.95,65.8,70.25,75.07,79.07,81.83,83.74,85.43,87.11];
    Oct_Kaduna = [81.56,82.86,83.97,85.51,87.48,88.7,87.45,82.73,75.18,66.78,59.54,54.33,50.82,48.48,47.42,48.47,52.15,57.9,64.14,69.32,72.88,75.35,77.54,79.71];
    Nov_Kaduna = [52.95,54.17,55.22,56.67,58.52,59.67,58.5,54.05,46.94,39.04,32.22,27.32,24.02,21.81,20.82,21.8,25.27,30.68,36.55,41.43,44.78,47.11,49.17,51.21];
    Dec_Kaduna = [39.66,40.52,41.25,42.27,43.56,44.36,43.54,40.43,35.46,29.93,25.16,21.73,19.43,17.88,17.19,17.87,20.3,24.09,28.2,31.6,33.95,35.58,37.02,38.45];

    %********Kano********
    Jan_Kano = [39.7,40.57,41.32,42.36,43.67,44.5,43.66,40.49,35.41,29.77,24.9,21.4,19.05,17.47,16.76,17.46,19.94,23.8,28.0,31.47,33.87,35.53,37.0,38.46];
    Feb_Kano = [32.92,33.65,34.27,35.14,36.24,36.92,36.22,33.58,29.34,24.63,20.56,17.64,15.68,14.36,13.77,14.35,16.42,19.65,23.15,26.05,28.05,29.44,30.66,31.88];
    Mar_Kano = [29.07,29.72,30.27,31.03,32.0,32.6,31.99,29.65,25.92,21.77,18.19,15.62,13.89,12.73,12.21,12.72,14.55,17.39,20.47,23.03,24.79,26.01,27.09,28.16];
    Apr_Kano = [41.86,42.8,43.61,44.72,46.14,47.03,46.13,42.71,37.23,31.15,25.9,22.13,19.59,17.89,17.12,17.88,20.55,24.72,29.24,32.99,35.57,37.36,38.95,40.52];
    May_Kano = [58.52,59.72,60.75,62.18,63.99,65.11,63.96,59.6,52.63,44.88,38.19,33.38,30.15,27.98,27.0,27.97,31.37,36.68,42.44,47.22,50.51,52.79,54.81,56.81];
    Jun_Kano = [73.32,74.4,75.32,76.61,78.23,79.25,78.21,74.29,68.02,61.05,55.03,50.71,47.8,45.85,44.97,45.84,48.9,53.67,58.86,63.15,66.11,68.16,69.98,71.78];
    Jul_Kano = [83.73,84.66,85.46,86.57,87.97,88.85,87.96,84.57,79.16,73.14,67.96,64.22,61.72,60.03,59.28,60.03,62.67,66.78,71.26,74.96,77.51,79.29,80.85,82.41];
    Aug_Kano = [88.22,89.09,89.83,90.86,92.16,92.98,92.15,89.0,83.98,78.39,73.57,70.1,67.77,66.21,65.51,66.2,68.66,72.48,76.63,80.08,82.45,84.09,85.55,86.99];
    Sep_Kano = [85.22,86.24,87.12,88.34,89.88,90.85,89.87,86.14,80.19,73.57,67.87,63.76,61.0,59.15,58.32,59.14,62.04,66.58,71.49,75.57,78.38,80.33,82.05,83.76];
    Oct_Kano = [68.26,69.62,70.78,72.39,74.44,75.72,74.41,69.48,61.6,52.82,45.26,39.82,36.17,33.71,32.61,33.7,37.55,43.55,50.07,55.48,59.19,61.78,64.06,66.33];
    Nov_Kano = [46.06,47.11,48.0,49.25,50.83,51.82,50.81,47.0,40.92,34.14,28.31,24.11,21.28,19.39,18.54,19.38,22.35,26.99,32.02,36.19,39.06,41.06,42.82,44.57];
    Dec_Kano = [45.25,46.22,47.04,48.19,49.64,50.55,49.62,46.12,40.53,34.3,28.94,25.08,22.49,20.75,19.96,20.74,23.47,27.73,32.35,36.19,38.82,40.66,42.28,43.89];


    %********Ilorin********

    Jan_Ilorin = [61.37,62.75,63.92,65.56,67.63,68.92,67.6,62.61,54.62,45.74,38.08,32.57,28.87,26.39,25.27,26.38,30.27,36.35,42.95,48.43,52.19,54.81,57.12,59.42];
    Feb_Ilorin = [62.13,63.62,64.9,66.67,68.91,70.32,68.89,63.47,54.81,45.18,36.88,30.91,26.89,24.2,22.99,24.19,28.41,35.01,42.16,48.09,52.18,55.01,57.52,60.01];
    Mar_Ilorin = [73.64,75.15,76.44,78.24,80.51,81.93,80.48,75.0,66.24,56.49,48.08,42.04,37.97,35.25,34.02,35.23,39.51,46.18,53.43,59.43,63.57,66.44,68.98,71.5];
    Apr_Ilorin = [83.51,84.73,85.78,87.23,89.06,90.21,89.04,84.61,77.53,69.66,62.87,57.99,54.7,52.5,51.51,52.49,55.95,61.34,67.19,72.04,75.38,77.7,79.75,81.78];
    May_Ilorin = [87.93,88.98,89.87,91.12,92.69,93.68,92.67,88.88,82.8,76.04,70.21,66.02,63.2,61.31,60.46,61.3,64.27,68.9,73.92,78.08,80.95,82.94,84.7,86.44];
    Jun_Ilorin = [90.71,91.64,92.43,93.54,94.94,95.81,94.92,91.55,86.15,80.15,74.98,71.25,68.75,67.08,66.32,67.07,69.7,73.81,78.27,81.96,84.51,86.28,87.84,89.39];
    Jul_Ilorin = [91.58,92.37,93.04,93.97,95.16,95.89,95.14,92.29,87.73,82.66,78.29,75.14,73.03,71.61,70.97,71.6,73.83,77.3,81.07,84.19,86.34,87.83,89.16,90.47];
    Aug_Ilorin = [91.9,92.63,93.24,94.1,95.19,95.87,95.18,92.55,88.35,83.68,79.65,76.76,74.81,73.5,72.92,73.5,75.55,78.74,82.22,85.09,87.07,88.45,89.67,90.87];
    Sep_Ilorin = [92.63,93.5,94.24,95.27,96.57,97.39,96.56,93.41,88.38,82.79,77.96,74.49,72.16,70.6,69.89,70.59,73.04,76.87,81.03,84.48,86.85,88.5,89.96,91.4];
    Oct_Ilorin = [91.34,92.41,93.32,94.58,96.19,97.19,96.17,92.3,86.11,79.23,73.3,69.03,66.16,64.24,63.37,64.23,67.25,71.96,77.07,81.31,84.23,86.26,88.05,89.83];
    Nov_Ilorin = [81.51,83.19,84.63,86.62,89.15,90.73,89.12,83.03,73.27,62.43,53.08,46.35,41.83,38.79,37.43,38.78,43.54,50.96,59.02,65.7,70.3,73.5,76.32,79.12];
    Dec_Ilorin = [71.32,73.03,74.48,76.5,79.06,80.66,79.03,72.86,62.99,52.02,42.56,35.75,31.17,28.11,26.73,28.09,32.91,40.42,48.57,55.33,59.99,63.22,66.08,68.91];

    %********Minna********
    Jan_Minna = [37.26,37.8,38.26,38.89,39.7,40.21,39.69,37.74,34.62,31.15,28.16,26.01,24.57,23.6,23.16,23.59,25.11,27.49,30.07,32.2,33.67,34.7,35.6,36.5];
    Feb_Minna = [35.12,35.62,36.06,36.66,37.42,37.9,37.41,35.57,32.63,29.36,26.54,24.51,23.15,22.23,21.82,22.23,23.66,25.9,28.33,30.35,31.74,32.7,33.55,34.4];
    Mar_Minna = [48.08,48.91,49.63,50.62,51.89,52.68,51.87,48.83,43.97,38.56,33.9,30.54,28.29,26.77,26.09,26.77,29.14,32.84,36.86,40.19,42.49,44.08,45.49,46.89];
    Apr_Minna = [67.69,68.75,69.66,70.91,72.51,73.5,72.49,68.65,62.5,55.67,49.78,45.54,42.7,40.79,39.93,40.78,43.77,48.45,53.53,57.74,60.63,62.64,64.42,66.19];
    May_Minna = [80.73,81.72,82.56,83.72,85.2,86.12,85.18,81.62,75.92,69.58,64.12,60.18,57.54,55.77,54.97,55.76,58.54,62.88,67.59,71.5,74.18,76.05,77.7,79.34];
    Jun_Minna = [87.31,88.2,88.97,90.02,91.37,92.2,91.35,88.11,82.94,77.19,72.22,68.65,66.26,64.65,63.92,64.64,67.16,71.1,75.38,78.92,81.36,83.06,84.56,86.04];
    Jul_Minna = [90.23,90.97,91.6,92.48,93.6,94.3,93.59,90.89,86.59,81.8,77.67,74.69,72.7,71.36,70.76,71.35,73.45,76.73,80.29,83.24,85.28,86.69,87.93,89.17];
    Aug_Minna = [92.11,92.8,93.39,94.21,95.25,95.9,95.24,92.73,88.72,84.26,80.42,77.66,75.8,74.55,73.99,74.55,76.5,79.55,82.87,85.61,87.5,88.81,89.98,91.13];
    Sep_Minna = [91.28,92.07,92.75,93.69,94.89,95.64,94.87,91.99,87.38,82.26,77.84,74.66,72.52,71.09,70.44,71.08,73.33,76.84,80.65,83.81,85.98,87.49,88.82,90.15];
    Oct_Minna = [87.92,88.92,89.77,90.95,92.45,93.38,92.43,88.82,83.05,76.63,71.1,67.11,64.44,62.64,61.84,62.63,65.45,69.84,74.61,78.57,81.29,83.18,84.85,86.51];
    Nov_Minna = [61.61,62.79,63.8,65.2,66.98,68.08,66.95,62.67,55.83,48.21,41.64,36.92,33.75,31.62,30.66,31.61,34.95,40.16,45.82,50.51,53.74,55.98,57.97,59.93];
    Dec_Minna = [46.25,47.03,47.7,48.63,49.81,50.54,49.79,46.95,42.41,37.35,33.0,29.86,27.76,26.34,25.71,26.34,28.55,32.01,35.77,38.88,41.02,42.51,43.83,45.13];

    %********Jos********

    Jan_Jos = [37.92,38.66,39.3,40.18,41.31,42.01,41.29,38.59,34.27,29.46,25.32,22.33,20.33,18.99,18.38,18.98,21.09,24.38,27.95,30.91,32.95,34.37,35.62,36.86];
    Feb_Jos = [35.52,36.24,36.85,37.71,38.79,39.47,38.78,36.17,31.99,27.34,23.34,20.45,18.52,17.22,16.63,17.21,19.25,22.43,25.88,28.75,30.72,32.08,33.3,34.5];
    Mar_Jos = [46.35,47.37,48.24,49.45,50.98,51.94,50.96,47.27,41.36,34.79,29.13,25.05,22.32,20.48,19.65,20.47,23.35,27.85,32.73,36.78,39.56,41.5,43.21,44.9];
    Apr_Jos = [75.39,76.77,77.96,79.61,81.7,83.0,81.67,76.64,68.59,59.63,51.92,46.36,42.63,40.13,39.0,40.11,44.04,50.17,56.82,62.34,66.14,68.77,71.11,73.42];
    May_Jos = [87.12,88.32,89.36,90.79,92.61,93.74,92.58,88.21,81.2,73.41,66.7,61.87,58.62,56.44,55.46,56.43,59.85,65.18,70.97,75.77,79.07,81.36,83.39,85.4];
    Jun_Jos = [92.39,93.3,94.08,95.17,96.54,97.4,96.52,93.21,87.91,82.02,76.94,73.29,70.83,69.18,68.44,69.18,71.76,75.8,80.17,83.8,86.3,88.04,89.57,91.09];
    Jul_Jos = [94.91,95.63,96.24,97.08,98.16,98.83,98.15,95.56,91.41,86.81,82.84,79.98,78.06,76.77,76.19,76.76,78.78,81.94,85.36,88.2,90.15,91.51,92.71,93.9];
    Aug_Jos = [95.54,96.19,96.75,97.52,98.5,99.11,98.49,96.12,92.35,88.14,84.52,81.91,80.16,78.99,78.46,78.98,80.82,83.7,86.82,89.41,91.19,92.43,93.53,94.61];
    Sep_Jos = [93.16,94.16,95.01,96.19,97.69,98.63,97.67,94.06,88.28,81.86,76.32,72.33,69.65,67.86,67.05,67.85,70.67,75.07,79.84,83.8,86.52,88.42,90.09,91.75];
    Oct_Jos = [84.88,86.31,87.54,89.23,91.39,92.73,91.36,86.17,77.86,68.62,60.66,54.93,51.08,48.5,47.34,48.48,52.54,58.86,65.72,71.42,75.33,78.05,80.46,82.85];
    Nov_Jos = [56.3,57.56,58.63,60.11,62.0,63.18,61.98,57.43,50.16,42.08,35.11,30.09,26.72,24.46,23.45,24.45,28.0,33.53,39.54,44.52,47.95,50.33,52.44,54.52];
    Dec_Jos = [43.41,44.28,45.02,46.06,47.37,48.19,47.36,44.19,39.13,33.5,28.65,25.16,22.82,21.24,20.54,21.24,23.7,27.56,31.74,35.21,37.59,39.25,40.71,42.17];

    %********Sokoto********

    Jan_Sokoto = [29.95,30.47,30.92,31.54,32.32,32.81,32.31,30.42,27.38,24.01,21.1,19.01,17.61,16.66,16.24,16.66,18.14,20.45,22.95,25.03,26.46,27.45,28.33,29.2];
    Feb_Sokoto = [25.0,25.43,25.81,26.33,26.99,27.4,26.98,25.39,22.86,20.03,17.6,15.85,14.68,13.89,13.53,13.88,15.12,17.05,19.15,20.89,22.08,22.91,23.65,24.38];
    Mar_Sokoto = [23.03,23.44,23.8,24.28,24.9,25.29,24.89,23.4,21.02,18.37,16.08,14.44,13.33,12.59,12.26,12.59,13.75,15.57,17.54,19.17,20.29,21.08,21.77,22.45];
    Apr_Sokoto = [36.11,36.81,37.42,38.25,39.31,39.98,39.3,36.74,32.66,28.11,24.19,21.37,19.48,18.2,17.63,18.2,20.19,23.31,26.68,29.48,31.41,32.75,33.94,35.11];
    May_Sokoto = [55.33,56.37,57.26,58.49,60.05,61.02,60.03,56.27,50.25,43.57,37.8,33.65,30.86,28.99,28.15,28.98,31.92,36.5,41.47,45.59,48.42,50.39,52.13,53.86];
    Jun_Sokoto = [66.7,67.78,68.7,69.97,71.59,72.6,71.57,67.67,61.44,54.5,48.52,44.22,41.33,39.39,38.52,39.38,42.42,47.17,52.32,56.6,59.54,61.58,63.39,65.18];
    Jul_Sokoto = [78.92,79.9,80.74,81.91,83.39,84.31,83.37,79.8,74.1,67.76,62.29,58.36,55.71,53.94,53.14,53.93,56.71,61.06,65.77,69.68,72.36,74.23,75.89,77.52];
    Aug_Sokoto = [86.38,87.25,87.99,89.01,90.31,91.13,90.3,87.16,82.14,76.56,71.75,68.29,65.96,64.4,63.7,64.4,66.84,70.66,74.81,78.25,80.61,82.26,83.71,85.15];
    Sep_Sokoto = [83.59,84.59,85.45,86.65,88.16,89.11,88.14,84.5,78.66,72.17,66.58,62.56,59.85,58.04,57.22,58.03,60.87,65.32,70.14,74.13,76.88,78.8,80.49,82.16];
    Oct_Sokoto = [64.91,66.19,67.28,68.8,70.72,71.93,70.7,66.06,58.65,50.39,43.28,38.17,34.73,32.42,31.38,32.41,36.03,41.68,47.8,52.89,56.39,58.82,60.96,63.1];
    Nov_Sokoto = [35.16,35.87,36.48,37.33,38.4,39.07,38.39,35.8,31.66,27.06,23.09,20.24,18.32,17.03,16.45,17.02,19.04,22.19,25.61,28.45,30.4,31.76,32.96,34.14];
    Dec_Sokoto = [33.31,33.89,34.38,35.07,35.95,36.49,35.93,33.83,30.46,26.72,23.49,21.17,19.61,18.56,18.09,18.56,20.2,22.76,25.54,27.85,29.44,30.54,31.52,32.48];
    
    
    
    
    Temp_data_raw = vertcat(Jan_Yola,Feb_Yola,Mar_Yola,Apr_Yola,May_Yola,Jun_Yola,Jul_Yola,Aug_Yola,Sep_Yola,Oct_Yola,Nov_Yola,Dec_Yola,Jan_Bauchi,Feb_Bauchi,Mar_Bauchi,Apr_Bauchi,May_Bauchi,Jun_Bauchi,Jul_Bauchi,Aug_Bauchi,Sep_Bauchi,Oct_Bauchi,Nov_Bauchi,Dec_Bauchi,Jan_Maiduguri,Feb_Maiduguri,Mar_Maiduguri,Apr_Maiduguri,May_Maiduguri,Jun_Maiduguri,Jul_Maiduguri,Aug_Maiduguri,Sep_Maiduguri,Oct_Maiduguri,Nov_Maiduguri,Dec_Maiduguri,Jan_Kaduna,Feb_Kaduna,Mar_Kaduna,Apr_Kaduna,May_Kaduna,Jun_Kaduna,Jul_Kaduna,Aug_Kaduna,Sep_Kaduna,Oct_Kaduna,Nov_Kaduna,Dec_Kaduna,Jan_Kano,Feb_Kano,Mar_Kano,Apr_Kano,May_Kano,Jun_Kano,Jul_Kano,Aug_Kano,Sep_Kano,Oct_Kano,Nov_Kano,Dec_Kano,Jan_Ilorin,Feb_Ilorin,Mar_Ilorin,Apr_Ilorin,May_Ilorin,Jun_Ilorin,Jul_Ilorin,Aug_Ilorin,Sep_Ilorin,Oct_Ilorin,Nov_Ilorin,Dec_Ilorin,Jan_Minna,Feb_Minna,Mar_Minna,Apr_Minna,May_Minna,Jun_Minna,Jul_Minna,Aug_Minna,Sep_Minna,Oct_Minna,Nov_Minna,Dec_Minna,Jan_Jos,Feb_Jos,Mar_Jos,Apr_Jos,May_Jos,Jun_Jos,Jul_Jos,Aug_Jos,Sep_Jos,Oct_Jos,Nov_Jos,Dec_Jos,Jan_Sokoto,Feb_Sokoto,Mar_Sokoto,Apr_Sokoto,May_Sokoto,Jun_Sokoto,Jul_Sokoto,Aug_Sokoto,Sep_Sokoto,Oct_Sokoto,Nov_Sokoto,Dec_Sokoto);
    
    %%Standardized Temperature
    row = size(Temp_data_raw,1);
    col = size(Temp_data_raw,2);
    Temp_Data = zeros(size(Temp_data_raw));
    for r=1:row
        for c=1:col
        Temp_Data(r,c) = (Temp_data_raw(r,c)-mean(Temp_data_raw(r,:)))/(max(Temp_data_raw(r,:))-min(Temp_data_raw(r,:)));
        end
    end
    
    Temp_Data;

end

%% Raw Temperature Data
function [Rng_adj,Tmin] = Estimation_Data()
    %%*****YOLA****
    Rng = [15.39,14.78,13.64,11.20,9.10,7.14,6.37,5.73,6.68,8.50,15.35,16.40;
           15.77,15.02,14.17,12.54,10.23,8.51,6.87,6.44,7.91,10.72,14.31,15.78;
           17.83,17.48,17.40,14.84,12.39,9.64,7.74,6.46,8.47,13.19,17.68,18.54;
           14.73,14.59,13.83,11.27,9.45,7.98,6.77,6.16,8.03,9.85,14.98,15.33;
           15.21,15.33,15.11,13.49,11.60,9.61,7.77,7.00,8.56,11.85,15.31,15.72;
           13.16,12.74,11.39,9.15,7.73,6.78,5.71,5.45,6.50,7.80,11.09,13.15;
           12.57,12.50,11.28,9.85,7.96,7.01,5.90,5.14,6.36,8.38,12.90,13.96;
           15.15,14.95,13.35,10.23,7.78,6.65,5.09,5.12,7.06,9.63,13.45,14.96;
           14.90,15.20,14.73,12.97,10.87,9.50,7.77,6.82,8.44,12.49,15.56,15.51;
           ]';
      
    Rng_adj = Rng(:);
       
    Avg = [26.05,29.07,32.67,33.35,30.93,28.20,27.29,26.43,26.72,27.82,27.47,25.71;
           23.64,26.83,29.86,31.46,30.12,27.42,25.90,24.97,25.87,27.38,26.41,24.20;
           22.23,25.21,29.43,32.99,32.90,30.34,28.05,26.46,27.56,28.44,25.87,22.90;
           23.12,25.67,28.78,29.04,27.16,25.23,24.34,23.77,24.36,25.19,24.72,23.27;
           21.72,24.56,28.69,31.85,31.30,28.72,26.57,25.63,26.72,27.73,25.33,22.30;
           26.85,28.73,29.44,28.37,27.09,25.77,24.94,24.53,25.01,25.85,27.05,26.74;
           27.54,30.06,31.97,31.00,28.57,26.64,25.60,25.11,25.54,26.54,27.69,27.42;
           19.25,21.66,24.03,23.82,22.35,21.17,19.78,19.73,20.56,21.32,20.37,19.59;
           24.59,27.18,31.24,34.30,33.21,30.91,28.28,26.81,27.86,30.14,29.12,26.19;
           ]';
    
    Avg_adj = Avg(:);
    Tmin = (Avg_adj - Rng_adj./2);
    
    size(Rng_adj);

end

%% Parameter function
function [rng,Tavg,N,Temp_Data,Temp_data_raw] = par()
    [Temp_Data,Temp_data_raw] = Northern_Data();
    k = kfunc();
    N = 12;
    Tavg = mean(Temp_data_raw(k,:));
    rng = max(Temp_data_raw(k,:))-min(Temp_data_raw(k,:));
end

%% G value
function G = NoM()
    [~,~,~,Temp_Data,~] = par();
    G = size(Temp_Data,1);
end
%% vector A
function A = vectorA()
    G = NoM();
    N = 12; % Maximum number of harmonics
    T = 24;
    A = zeros(26,26);
    ao = 1;
    aa = 1;
  %row 1-12, col 1-24

 for m=1:G     
    for n1=1:N   
        for t1=1:T
            sum_s = 2*sin(n1*pi*t1/12);
            sum_c = 2*cos(n1*pi*t1/12);
            if n1<=1
                A(1,1) = A(1,1) +( 2* aa);
            end
            A(1,n1+1) = A(1,n1+1) + sum_s;
            A(1,13+n1) = A(1,13+n1) + sum_c;
        end



    end
end



%for nd=1:NofD 
for m2=1:G
    for x = 1:12
        for n=1:N   
            for t=1:T
                sum_s = sin(n*pi*t/12)*(2*sin(x*pi*t/12));
                sum_c = cos(n*pi*t/12)*(2*sin(x*pi*t/12));
                A(x+1,1) = A(x+1,1)+ (ao * (2*sin(x*pi*t/12)));
                A(x+1,n+1) = A(x+1,n+1) + sum_s;
                A(x+1,13+n) = A(x+1,13+n) + sum_c;
            end



        end
    end
end


for m3=1:G
    for x3 = 1:12
        for n3=1:N   
            for t3=1:T
                sum_s = sin(n3*pi*t3/12)*(2*cos(x3*pi*t3/12));
                sum_c = cos(n3*pi*t3/12)*(2*cos(x3*pi*t3/12));
                A(x3+13,1) = A(x3+13,1)+ (ao * (2*cos(x3*pi*t3/12)));
                A(x3+13,n3+1) = A(x3+13,n3+1) + sum_s;
                A(x3+13,13+n3) = A(x3+13,13+n3) + sum_c;
                sum_s = 0;
                sum_c = 0;
            end
        end
    end
end


    % lamda3 (equation 1)
    A(1,N*2+2) = 24/23;
    
    for n4=1:N
       for t4=1:T
           % sin (eqn 2-13) lamda3
           A(n4+1,N*2+2)= A(n4+1,N*2+2)+ (1/23)*sin(n4*pi*t4/12);
           % sin (eqn 2-13)
           A(n4+13,N*2+2)= A(n4+13,N*2+2)+ (1/23)*cos(n4*pi*t4/12);
       end
    end
    
    
    % (equation 26, lamdas 3)
    A(N*2+2:end,N*2+2) = 0;
    
    % (equation 26, a0)
    A(N*2+2,1) = 24/23;  %changed
    
    % aN & bN
    for n5=1:N
        for t5=1:T
           % sin (eqn 27)
           A(N*2+2,n5+1)= A(N*2+2,n5+1) + (1/23)*sin(n5*pi*t5/12);
           % sin (eqn 27)
           A(N*2+2,n5+13)= A(N*2+2,n5+13) + (1/23)*cos(n5*pi*t5/12);
       end
    end
    A_adj = A([1:12,14:end],[1:12,14:end]);
    size(A_adj);
    A;

end

%% vector B
function B = vectorB()  
    G = NoM();
    B =zeros(26,1);
    [~,~,~,Temp_Data,~] = par();

    T = 24;
    M =12;%(N before)
    std_sum = 0;
    sum_s = 0;
    sum_c = 0;
    std_summa = 0;
    range_sum = 0;
    
    for m=1:G
        for t=1:T 
            B(1,1) = B(1,1) + Temp_Data(m,t); 
        end
    end
    B(1,1) = 2 * B(1,1);
    
    for n=1:M
        for m1=1:G
            for t=1:T
                sum_s = sum_s + (sin(n*pi*t/12))*Temp_Data(m1,t);
                sum_c = sum_c + (cos(n*pi*t/12))*Temp_Data(m1,t); 
            end
        end
        B(n+1,1) = 2*sum_s;   
        B(n+13,1) = 2* sum_c;
        sum_s = 0;
        sum_c = 0;
        
    end
    
    % eqn 28
    for m2=1:G
        for t2=1:T
            std_sum = std_sum + (max(Temp_Data(m2,:)) -Temp_Data(m2,t2));       
        end
        range_sum = range_sum + (max(Temp_Data(m2,:)) - min(Temp_Data(m2,:)));
        std = std_sum/(23);
        std_summa = std_summa + std;
        std_sum = 0;
    end
    std_avg = std_summa / G;
    range_avg = range_sum/G;
    %range_avg = max(Temp_Data(:)) - min(Temp_Data(:))
      %change
    
    %eqn 26
    B(M*2+2,1) =((24/23*range_avg)-std_avg);
    B;
end

%%
function [ao,an,bn] = vectorX()
    [~,~,N,~,~] = par();
    %N = 4;
    A = vectorA();
    B = vectorB();
    X = pinv(A)* B;
    ao = X(1,1);
    %an = X(2:13,1).';
    %bn = X(14:25,1).';
    an = X(2:N+1,1).';
    bn = X(14:13+N,1).';
end

%% Predict

function [actual_data,predicted_temp_adj] = Temp()
    [ao,an,bn] = vectorX();
    %[rng,Tavg,N,Temp_Data,Temp_data_raw] = par();
    [~,~,N,Temp_Data,Temp_data_raw] = par();
    %[rnge,Tmine] = Estimation_Data();
    %rng= 8.51;
    %Tmin = 23.165;
    
    G = NoM();
    MAPE = zeros(G,1);
    MFE = zeros(G,1);
    MAD = zeros(G,1);
    T_min = zeros(G,1);
    T_rng = zeros(G,1);
    h = zeros(G,1);
    predict_r_daily =zeros(G,1);
    predict_rng_daily = zeros(G,1);
    incr = 1;
    
    for g=1:G
        %k = kfunc();
        t = 2;
        %N = 12;
        T = 24;
        Tmin = min(Temp_data_raw(g,:));
        rng =  max(Temp_data_raw(g,:)) -  min(Temp_data_raw(g,:));
        T_min(g,1) = Tmin;
        T_rng(g,1) = max(Temp_data_raw(g,:)) -  min(Temp_data_raw(g,:));
        %rng = rnge(g);
        %Tmin = Tmine(g);
        
        sum_an = 0;
        sum_bn = 0;
        sum_s = 0;
        sum_c = 0;
        dt = zeros(1,24);
        time = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24];
        predicted_temp = zeros(1,24);
        for n=1:N
            sum_an = sum_an + an(n)*sin(n*pi*t/12);
            sum_bn = sum_bn + bn(n)*cos(n*pi*t/12);
        end


        for t=1:T
            for n=1:N
                sum_s = sum_s + an(n)*sin(n*pi*t/12);
                sum_c = sum_c + bn(n)*cos(n*pi*t/12);
            end
            dt(1,t) = ao + sum_s + sum_c;
            predicted_temp(1,t) = dt(1,t);
            sum_s = 0;
            sum_c = 0;
        end
        [City,Month] = Data_Tag();

        predicted_temp;
        predicted_temp_adj = (predicted_temp * rng)+Tmin;
        %plot(time,predicted_temp_adj,time,Temp_data_raw(g,:));
        %title({City,Month}, 'FontSize',12);
        %legend('predicted','actual data');

        actual_data = Temp_data_raw(g,:);
        rng;
        %Tavg;
        
        %To evaluate error
        n = 24;
        abs_dev = abs(actual_data - predicted_temp_adj);
        dev = actual_data - predicted_temp_adj;
        percent_error= abs(actual_data - predicted_temp_adj)./abs(actual_data);
        mean_abs_dev = sum(abs_dev)/n;
        mean_dev = sum(dev)/n;
        mean_percent_error = (sum(percent_error)/n)*100;
        
        MAPE(g,1) = mean_percent_error;
        MFE(g,1) = mean_dev;
        MAD(g,1) = mean_abs_dev;
        predict_r_daily(g,1) = mean(predicted_temp_adj);
        predict_rng_daily(g,1) = max(predicted_temp_adj)-min(predicted_temp_adj);
        
        if(mean_dev < 0)
            h(incr,1) = g;
            incr = incr +1;
        end
    end
    l=9;  
    %w = T_min(12*(l-1)+1:12*(l-1)+12);
    w = T_rng(12*(l-1)+1:12*(l-1)+12);
    %w_adj = round(w',2)
    %fprintf('%.2f\t',w)
    x = MAPE(12*(l-1)+1:12*(l-1)+12);
    y = MFE(12*(l-1)+1:12*(l-1)+12);
    z = MAD(12*(l-1)+1:12*(l-1)+12);
    fprintf('%.4f\t',z);
    size(x);
    [max_value_MAPE,max_index_MAPE] = max(MAPE);
    [min_value_MAPE,min_index_MAPE] = min(MAPE);
    [max_value_MFE,max_index_MFE] = max(MFE);
    [min_value_MFE,min_index_MFE] = min(MFE);
    [max_value_MAD,max_index_MAD] = max(MAD);
    [min_value_MAD,min_index_MAD] = min(MAD);
    [max_value_R_avg,max_index_R_avg] = max(predict_r_daily)
    [min_value_R_rng,min_index_R_rng] = min(predict_rng_daily);
    h;
    predict_rng_daily;
    count = sum(h(:)>0);
    
    
end

%% Mean Absolute Deviation

function mean_abs_dev = MAD()
    [actual_data,predicted_temp_adj] = Temp();
    n = 24;
    sum_dev = 0;
    abs_dev = abs(actual_data - predicted_temp_adj);
    dev = actual_data - predicted_temp_adj;
    percent_error= abs(actual_data - predicted_temp_adj)./abs(actual_data);
    mean_abs_dev = sum(abs_dev)/n;
    mean_dev = sum(dev)/n;
    mean_percent_error = (sum(percent_error)/n)*100;
    
    
    
    
end